language: cpp

branches:
  only:
  - master

cache:
- directories:
  - $HOME/.cache

addons:
  apt:
    packages:
      - gcc-4.4
      - g++-4.4
install:
  - sudo apt-get install -y gdb

script:
  - make
  - ./tst/webrtc_client_test

matrix:
  # MemorySanitizer and UndefinedBehaviorSanitizer are still WIP
  allow_failures:
    - env: allowTestFail=true

  include:
    # MacOS Builds
    - name: "OSX GCC"
      os: osx
      compiler: gcc
      before_script:
        - mkdir build && cd build && cmake .. -DBUILD_TEST=TRUE
    - name: "OSX Clang"
      os: osx
      compiler: clang
      before_script:
        - mkdir build && cd build && cmake .. -DBUILD_TEST=TRUE -DCOMPILER_WARNINGS=TRUE

    # Code Coverage
    - name: "Linux GCC Code Coverage"
      os: linux
      compiler: gcc
      before_script:
        - mkdir build && cd build && cmake .. -DCODE_COVERAGE=TRUE -DBUILD_TEST=TRUE
      after_success:
        - for test_file in $(find CMakeFiles/kvsWebrtcClient.dir CMakeFiles/kvsWebrtcSignalingClient.dir -name '*.gcno'); do gcov $test_file; done
        - bash <(curl -s https://codecov.io/bash)

    # AddressSanitizer
    - name: "Linux Clang AddressSanitizer"
      os: linux
      compiler: clang
      env: ASAN_OPTIONS=detect_odr_violation=0
      before_script: mkdir build && cd build && cmake .. -DBUILD_TEST=TRUE -DADDRESS_SANITIZER=TRUE

    # MemorySanitizer
    - name: "Linux Clang MemorySanitizer"
      os: linux
      compiler: clang
      env: allowTestFail=true
      before_script: mkdir build && cd build && cmake .. -DBUILD_TEST=TRUE -DMEMORY_SANITIZER=TRUE

    # ThreadSanitizer
    - name: "Linux Clang ThreadSanitizer"
      os: linux
      compiler: clang
      env: allowTestFail=true
      before_script: mkdir build && cd build && cmake .. -DBUILD_TEST=TRUE -DTHREAD_SANITIZER=TRUE

    # UndefinedBehaviorSanitizer
    - name: "Linux Clang UndefinedBehaviorSanitizer"
      os: linux
      compiler: clang
      before_script: mkdir build && cd build && cmake .. -DBUILD_TEST=TRUE -DUNDEFINED_BEHAVIOR_SANITIZER=TRUE

    # Old Version GCC 4.4
    - name: "Linux GCC 4.4 Build"
      os: linux
      compiler: gcc
      before_script:
        - export CC=gcc-4.4 && export CXX=g++-4.4 && mkdir build && cd build && cmake .. -DBUILD_TEST=FALSE

