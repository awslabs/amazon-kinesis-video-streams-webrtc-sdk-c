# Some of these suppressions are heavy handed, but can't trace them down to a single cause

#  WARNING: ThreadSanitizer: data race (pid=16002)
#    Write of size 8 at 0x7fe0a1b254a0 by thread T8 (mutexes: write M294, write M312):
#      #0 gmtime <null> (webrtc_client_test+0x0000004d9b30)
#      #1 generateTimestampStr /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Time.c:19 (libkvsWebrtcClient.so+0x000000066c22)
#      #2 addLogMetadata /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Logger.c:41 (libkvsWebrtcClient.so+0x000000066fcf)
#      #3 defaultLogPrint /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Logger.c:65 (libkvsWebrtcClient.so+0x000000067236)
#      #4 socketConnectionIsConnected /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Ice/SocketConnection.c:312 (libkvsWebrtcClient.so+0x0000000144f8)
#      #5 turnConnectionStepState /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Ice/TurnConnection.c:908 (libkvsWebrtcClient.so+0x000000030400)
#      #6 turnConnectionTimerCallback /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Ice/TurnConnection.c:1274 (libkvsWebrtcClient.so+0x000000033d36)
#      #7 timerQueueExecutor /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/TimerQueue.c:561 (libkvsWebrtcClient.so+0x000000064c61)
#
#    Previous write of size 8 at 0x7fe0a1b254a0 by thread T10 (mutexes: write M278, write M305):
#      #0 gmtime <null> (webrtc_client_test+0x0000004d9b30)
#      #1 generateTimestampStr /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Time.c:19 (libkvsWebrtcClient.so+0x000000066c22)
#      #2 addLogMetadata /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Logger.c:41 (libkvsWebrtcClient.so+0x000000066fcf)
#      #3 defaultLogPrint /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Logger.c:65 (libkvsWebrtcClient.so+0x000000067236)
#      #4 socketConnectionIsConnected /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Ice/SocketConnection.c:312 (libkvsWebrtcClient.so+0x0000000144f8)
#      #5 turnConnectionStepState /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Ice/TurnConnection.c:908 (libkvsWebrtcClient.so+0x000000030400)
#      #6 turnConnectionTimerCallback /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Ice/TurnConnection.c:1274 (libkvsWebrtcClient.so+0x000000033d36)
#      #7 timerQueueExecutor /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/TimerQueue.c:561 (libkvsWebrtcClient.so+0x000000064c61)
race:generateTimestampStr

# For some reason the test pre-amble (setup) interferes with the instrumented allocators.
# WARNING: ThreadSanitizer: data race (pid=21041)
#   Write of size 8 at 0x000001426a90 by main thread (mutexes: write M340438538313008496):
#     #0 setInstrumentedAllocators /home/travis/build/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/InstrumentedAllocators.c:17:42 (webrtc_client_test+0x6db53b)
#     #1 com::amazonaws::kinesis::video::webrtcclient::WebRtcClientTestBase::SetUp() /home/travis/build/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c/tst/WebRTCClientTestFixture.cpp:43:5 (webrtc_client_test+0x691e72)
#     #2 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test+0x6d38bd)
#
#   Previous read of size 8 at 0x000001426a90 by thread T8:
#     [failed to restore the stack]
#
#   As if synchronized via sleep:
#     #0 usleep /tmp/final/llvm.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:348:3 (webrtc_client_test+0x4dbf72)
#     #1 defaultThreadSleep /home/travis/build/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Thread.c:235:13 (libkvsWebrtcClient.so+0x6d6d9)
#     #2 com::amazonaws::kinesis::video::webrtcclient::SignalingApiFunctionalityTest_unknownMessageTypeEmulation_Test::TestBody() /home/travis/build/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c/tst/SignalingApiFunctionalityTest.cpp:1466:5 (webrtc_client_test+0x631411)
#     #3 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test+0x6d38bd)
#
#   Location is global 'gInstrumentedAllocatorsStoredMemFree' of size 8 at 0x000001426a90 (webrtc_client_test+0x000001426a90)
#
#   Mutex M340438538313008496 is already destroyed.
#
#   Thread T8 (tid=21592, finished) created by main thread at:
#     #0 pthread_create /tmp/final/llvm.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:965:3 (webrtc_client_test+0x4de515)
#     #1 defaultCreateThread /home/travis/build/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Thread.c:171:14 (libkvsWebrtcClient.so+0x6d45a)
#     #2 receiveLwsMessage /home/travis/build/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Signaling/LwsApiCalls.c:1780:5 (libkvsWebrtcSignalingClient.so+0x11953)
#     #3 com::amazonaws::kinesis::video::webrtcclient::SignalingApiFunctionalityTest_unknownMessageTypeEmulation_Test::TestBody() /home/travis/build/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c/tst/SignalingApiFunctionalityTest.cpp:1461:5 (webrtc_client_test+0x631218)
#     #4 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test+0x6d38bd)
#
# SUMMARY: ThreadSanitizer: data race /home/travis/build/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/InstrumentedAllocators.c:17:42 in setInstrumentedAllocators
race:setInstrumentedAllocators

# test code synchronized by sleep
race:PeerConnectionFunctionalityTest_freeTurnDueToP2PFoundBeforeTurnEstablished_Test
race:PeerConnectionFunctionalityTest_freeTurnDueToP2PFoundAfterTurnEstablished
race:DataChannelFunctionalityTest_createDataChannel_Disconnected_Test

race:getDataChannelStats
# WARNING: ThreadSanitizer: data race (pid=51832)
#  Read of size 8 at 0x7b6800020358 by main thread:
#    #0 getDataChannelStats Metrics.c:151 (libkvsWebrtcClient.dylib:x86_64+0x36505)
#    #1 rtcPeerConnectionGetMetrics Metrics.c:197 (libkvsWebrtcClient.dylib:x86_64+0x36d33)
#    #2 com::amazonaws::kinesis::video::webrtcclient::DataChannelFunctionalityTest_createDataChannel_DataChannelMetricsTest_Test::TestBody() DataChannelFunctionalityTest.cpp:580 (webrtc_client_test:x86_64+0x10001ca19)
#    #3 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test:x86_64+0x10025b0bd)
#    #4 main main.cpp:68 (webrtc_client_test:x86_64+0x10020be1d)

#  Previous write of size 8 at 0x7b6800020358 by thread T8:
#    #0 dataChannelSend DataChannel.c:69 (libkvsWebrtcClient.dylib:x86_64+0x375a3)
#    #1 com::amazonaws::kinesis::video::webrtcclient::DataChannelFunctionalityTest_createDataChannel_DataChannelMetricsTest_Test::TestBody()::$_18::operator()(unsigned long long, __RtcDataChannel*) const DataChannelFunctionalityTest.cpp:542 (webrtc_client_test:x86_64+0x10002a90d)
#    #2 com::amazonaws::kinesis::video::webrtcclient::DataChannelFunctionalityTest_createDataChannel_DataChannelMetricsTest_Test::TestBody()::$_18::__invoke(unsigned long long, __RtcDataChannel*) DataChannelFunctionalityTest.cpp:528 (webrtc_client_test:x86_64+0x10002a638)
#    #3 onSctpSessionDataChannelOpen PeerConnection.c:490 (libkvsWebrtcClient.dylib:x86_64+0x3b504)
#    #4 handleDcepPacket Sctp.c:317 (libkvsWebrtcClient.dylib:x86_64+0x5f34a)
#    #5 onSctpInboundPacket Sctp.c:338 (libkvsWebrtcClient.dylib:x86_64+0x5e1ba)
#    #6 sctp_invoke_recv_callback <null> (libusrsctp.1.dylib:x86_64+0xb501a)
#    #7 onInboundPacket PeerConnection.c:126 (libkvsWebrtcClient.dylib:x86_64+0x3b703)
#    #8 incomingDataHandler IceAgent.c:2156 (libkvsWebrtcClient.dylib:x86_64+0x10b15)
#    #9 connectionListenerReceiveDataRoutine ConnectionListener.c:380 (libkvsWebrtcClient.dylib:x86_64+0xb0cb)

#  As if synchronized via sleep:
#    #0 usleep <null> (libclang_rt.tsan_osx_dynamic.dylib:x86_64h+0x2953e)
#    #1 defaultThreadSleep <null> (libkvsWebrtcClient.dylib:x86_64+0x73566)
#    #2 com::amazonaws::kinesis::video::webrtcclient::DataChannelFunctionalityTest_createDataChannel_DataChannelMetricsTest_Test::TestBody() DataChannelFunctionalityTest.cpp:574 (webrtc_client_test:x86_64+0x10001c65a)
#    #3 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test:x86_64+0x10025b0bd)
#    #4 main main.cpp:68 (webrtc_client_test:x86_64+0x10020be1d)

#  Location is heap block of size 1408 at 0x7b680001fe00 allocated by thread T8:
#    #0 calloc <null> (libclang_rt.tsan_osx_dynamic.dylib:x86_64h+0x4e7e2)
#    #1 defaultMemCalloc <null> (libkvsWebrtcClient.dylib:x86_64+0x6c40c)
#    #2 handleDcepPacket Sctp.c:317 (libkvsWebrtcClient.dylib:x86_64+0x5f34a)
#    #3 onSctpInboundPacket Sctp.c:338 (libkvsWebrtcClient.dylib:x86_64+0x5e1ba)
#    #4 sctp_invoke_recv_callback <null> (libusrsctp.1.dylib:x86_64+0xb501a)
#    #5 onInboundPacket PeerConnection.c:126 (libkvsWebrtcClient.dylib:x86_64+0x3b703)
#    #6 incomingDataHandler IceAgent.c:2156 (libkvsWebrtcClient.dylib:x86_64+0x10b15)
#    #7 connectionListenerReceiveDataRoutine ConnectionListener.c:380 (libkvsWebrtcClient.dylib:x86_64+0xb0cb)

#  Thread T8 (tid=5082892, running) created by main thread at:
#    #0 pthread_create <null> (libclang_rt.tsan_osx_dynamic.dylib:x86_64h+0x2a99d)
#    #1 defaultCreateThread <null> (libkvsWebrtcClient.dylib:x86_64+0x73293)
#    #2 iceAgentStartGathering IceAgent.c:537 (libkvsWebrtcClient.dylib:x86_64+0x116a9)
#    #3 setLocalDescription PeerConnection.c:1050 (libkvsWebrtcClient.dylib:x86_64+0x423af)
#    #4 com::amazonaws::kinesis::video::webrtcclient::WebRtcClientTestBase::connectTwoPeers(RtcPeerConnection*, RtcPeerConnection*, char*, char*) WebRTCClientTestFixture.cpp:211 (webrtc_client_test:x86_64+0x1002037b0)
#    #5 com::amazonaws::kinesis::video::webrtcclient::DataChannelFunctionalityTest_createDataChannel_DataChannelMetricsTest_Test::TestBody() DataChannelFunctionalityTest.cpp:574 (webrtc_client_test:x86_64+0x10001c65a)
#    #6 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test:x86_64+0x10025b0bd)
#    #7 main main.cpp:68 (webrtc_client_test:x86_64+0x10020be1d)

# WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=18891)
#   Cycle in lock order graph: M1507 (0x7d0c0000e4f0) => M1502 (0x7d0c00008d60) => M1507
#
#   Mutex M1502 acquired here while holding mutex M1507 in main thread:
#     #0 pthread_mutex_lock <null> (webrtc_client_test+0x0000004df310)
#     #1 defaultLockMutex /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Mutex.c:202 (libkvsWebrtcClient.so+0x000000060c08)
#     #2 timerQueueAddTimer /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/TimerQueue.c:65 (libkvsWebrtcClient.so+0x00000006296b)
#     #3 turnConnectionStart /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Ice/TurnConnection.c:740 (libkvsWebrtcClient.so+0x00000002fbc3)
#     #4 com::amazonaws::kinesis::video::webrtcclient::TurnConnectionFunctionalityTest_turnConnectionRefreshPermissionTest_Test::TestBody() /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/tst/TurnConnectionFunctionalityTest.cpp:83 (webrtc_client_test+0x0000005c5da1)
#     #5 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test+0x000000672819)
#
#   Mutex M1507 acquired here while holding mutex M1502 in thread T431:
#     #0 pthread_mutex_lock <null> (webrtc_client_test+0x0000004df310)
#     #1 defaultLockMutex /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Mutex.c:202 (libkvsWebrtcClient.so+0x000000060c08)
#     #2 turnConnectionTimerCallback /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Ice/TurnConnection.c:1184 (libkvsWebrtcClient.so+0x000000032dd4)
#     #3 timerQueueExecutor /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/TimerQueue.c:561 (libkvsWebrtcClient.so+0x000000064c61)
deadlock:turnConnectionStart

#  Mutex M208 acquired here while holding mutex M209 in main thread:
#    #0 pthread_mutex_lock <null> (webrtc_client_test+0x0000004df310)
#    #1 defaultLockMutex /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Mutex.c:202 (libkvsWebrtcClient.so+0x000000060c08)
#    #2 timerQueueAddTimer /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/TimerQueue.c:65 (libkvsWebrtcClient.so+0x00000006296b)
#    #3 dtlsSessionStart /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Dtls/Dtls.c:305 (libkvsWebrtcClient.so+0x000000011540)
#    #4 setRemoteDescription /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/PeerConnection/PeerConnection.c:738 (libkvsWebrtcClient.so+0x0000000435d4)
#    #5 com::amazonaws::kinesis::video::webrtcclient::WebRtcClientTestBase::connectTwoPeers(RtcPeerConnection*, RtcPeerConnection*) /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/tst/WebRTCClientTestFixture.cpp:175 (webrtc_client_test+0x00000060859f)
#    #6 com::amazonaws::kinesis::video::webrtcclient::PeerConnectionFunctionalityTest_connectTwoPeers_Test::TestBody() /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/tst/PeerConnectionFunctionalityTest.cpp:19 (webrtc_client_test+0x00000058a03b)
#    #7 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test+0x000000672819)
#
#  Mutex M209 acquired here while holding mutex M208 in thread T8:
#    #0 pthread_mutex_lock <null> (webrtc_client_test+0x0000004df310)
#    #1 defaultLockMutex /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/Mutex.c:202 (libkvsWebrtcClient.so+0x000000060c08)
#    #2 dtlsTransmissionTimerCallback /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/src/source/Dtls/Dtls.c:48 (libkvsWebrtcClient.so+0x00000000fc3f)
#    #3 timerQueueExecutor /usr/src/amazon-kinesis-video-streams-webrtc-sdk-c/open-source/amazon-kinesis-video-streams-pic/src/utils/src/TimerQueue.c:561 (libkvsWebrtcClient.so+0x000000064c61)
deadlock:dtlsSessionStart

# ==================
# WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=3774182)
#   Cycle in lock order graph: M358 (0x7b0c00001088) => M346 (0x7b0c00000f98) => M358
#
#   Mutex M346 acquired here while holding mutex M358 in main thread:
#     #0 pthread_mutex_lock <null> (webrtc_client_test+0x52d866)
#     #1 defaultLockMutex /home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/open-source/libkvsCommonLws/build/src/libkvsCommonLws-download/dependency/libkvspic/kvspic-src/src/utils/src/Mutex.c:202:5 (libkvsWebrtcClient.so+0x845e4)
#     #2 com::amazonaws::kinesis::video::webrtcclient::DtlsFunctionalityTest::createAndConnect(unsigned long, __DtlsSession**, __DtlsSession**) /home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/tst/DtlsFunctionalityTest.cpp:72:9 (webrtc_client_test+0x5c4f7b)
#     #3 com::amazonaws::kinesis::video::webrtcclient::DtlsFunctionalityTest_processPacketWithVariedSizes_Test::TestBody() /home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/tst/DtlsFunctionalityTest.cpp:151:5 (webrtc_client_test+0x5c41a0)
#     #4 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test+0x785a93)
#     #5 main /home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/tst/main.cpp:68:14 (webrtc_client_test+0x744825)
#
#     Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message
#
#   Mutex M358 acquired here while holding mutex M346 in thread T10:
#     #0 pthread_mutex_lock <null> (webrtc_client_test+0x52d866)
#     #1 defaultLockMutex /home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/open-source/libkvsCommonLws/build/src/libkvsCommonLws-download/dependency/libkvspic/kvspic-src/src/utils/src/Mutex.c:202:5 (libkvsWebrtcClient.so+0x845e4)
#     #2 timerQueueExecutor /home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/open-source/libkvsCommonLws/build/src/libkvsCommonLws-download/dependency/libkvspic/kvspic-src/src/utils/src/TimerQueue.c:562:37 (libkvsWebrtcClient.so+0x88388)
#
#   Thread T10 (tid=3774194, running) created by main thread at:
#     #0 pthread_create <null> (webrtc_client_test+0x51049b)
#     #1 defaultCreateThread /home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/open-source/libkvsCommonLws/build/src/libkvsCommonLws-download/dependency/libkvspic/kvspic-src/src/utils/src/Thread.c:171:14 (libkvsWebrtcClient.so+0x865a3)
#     #2 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (webrtc_client_test+0x785a93)
#     #3 main /home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/tst/main.cpp:68:14 (webrtc_client_test+0x744825)
#
# SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/home/ubuntu/Documents/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c-mbedtls-perf/build/tst/webrtc_client_test+0x52d866) in pthread_mutex_lock
# ==================
deadlock:com::amazonaws::kinesis::video::webrtcclient::DtlsFunctionalityTest::createAndConnect

# in this case we are trying to mock a bad auth by directly modifying the internal buffer storing
# the secret key which might in some cases be raced if the SDK detects a disconnect and the listener
# thread is attempting to reconnect while we are emulating test. There is also what seem to be a
# false positive with the deadlock. Trying to disable the LWS handling routine based pattern
# instead of flagging each individual instance of the test.
deadlock:lwsListenerHandler
deadlock:connectSignalingChannelLws
race:lwsListenerHandler
